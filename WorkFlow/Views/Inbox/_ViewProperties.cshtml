@using WorkFlowLib.Data
@using WorkFlowLib.DTO
@using WorkFlowLib
@using WorkFlow.Ext
@using Resources
@using Dreamlab.Core
@model FlowInfo
@{
    PropertiesValue properties = ViewBag.Properties as PropertiesValue;
    WF_FlowCases_Attachments[] attachments = ViewBag.Attachments as WF_FlowCases_Attachments[];
}
<table style="margin: 0 auto;">
    <tr>
        <td style="text-align: left;">
            <div id="div_history"></div>
            <h4>
                @if (Model.CaseInfo.Ver > 0)
                {
                    @Ajax.ActionLink("Version:" + (Model.CaseInfo.Ver ?? 0), "ViewHistoryCases", "Inbox", new { id = Model.CaseInfo.FlowCaseId, ignorehistory = true }, new AjaxOptions
                    {
                        HttpMethod = "Get",
                        InsertionMode = InsertionMode.Replace,
                        LoadingElementId = "div_progress",
                        UpdateTargetId = "div_history",
                        OnFailure = "ajaxError"
                    })
                }
                else
                {
                    @: Version: @(Model.CaseInfo.Ver ?? 0)
                }
            </h4>
        </td>
    </tr>
    <tr>
        <td>
            <table class="table-bordered">
                <tr>
                    <td style="vertical-align: top; background-color: white;">
                        <div class="property-block">
                            <div class="property-title">Subject</div>
                            <div class="property-value">@Model.CaseInfo.Subject</div>
                        </div>
                    </td>
                    <td style="vertical-align: top; background-color: white;">
                        <div class="property-block">
                            <div class="property-title">Department</div>
                            <div class="property-value">@Model.CaseInfo.Department</div>
                        </div>
                    </td>
                    <td style="vertical-align: top; background-color: white;">
                        <div class="property-block">
                            <div class="property-title">Deadline</div>
                            <div class="property-value">@(Model.CaseInfo.Deadline?.ToLocalTime().ToString("M/d/yyyy") ?? string.Empty)</div>
                        </div>
                    </td>
                </tr>
                @if (properties != null && properties.PropertyInfo.Any() == true)
                {
                    foreach (var props in properties.PropertyInfo.SplitToGroup(3))
                    {
                        <tr>
                            @foreach (var prop in props)
                            {
                                WF_CasePropertyValues value = properties.Values.FirstOrDefault(p => p.PropertyId == prop.FlowPropertyId);
                                <td style="vertical-align: top; background-color: white;">
                                    <div class="property-block">
                                        <div class="property-title">@prop.PropertyName</div>
                                        <div class="property-value">
                                            @if (value != null)
                                            {
                                                if (prop.PropertyType == 10)
                                                {
                                                    @(WebCacheHelper.GetRoles().ContainsKey(value.StringValue ?? string.Empty) ? WebCacheHelper.GetRoles()[value.StringValue ?? string.Empty] : value.StringValue )
                                                }
                                                else if (prop.PropertyType == 11)
                                                {
                                                    @(WebCacheHelper.GetDepartments().ContainsKey(value.StringValue ?? string.Empty) ? WebCacheHelper.GetDepartments()[value.StringValue ?? string.Empty] : value.StringValue )
                                                }
                                                else if (prop.PropertyType == 12)
                                                {
                                                    @(WebCacheHelper.GetDeptTypes().ContainsKey(value.StringValue ?? string.Empty) ? WebCacheHelper.GetDeptTypes()[value.StringValue ?? string.Empty] : value.StringValue )
                                                }
                                                else if (prop.PropertyType == 14)
                                                {
                                                    @Consts.GetBrandFullName(value.StringValue ?? string.Empty)
                                                }
                                                else
                                                {
                                                    @(value?.StringValue
                                                          ?? value?.IntValue?.ToString()
                                                          ?? value?.DateTimeValue?.ToString("yyyy-MM-dd HH:mm")
                                                          ?? value?.NumericValue?.ToString("f2")
                                                          ?? value?.TextValue
                                                          ?? value?.DateValue?.ToString("yyyy-MM-dd HH:mm")
                                                          ?? WebCacheHelper.GetWF_UsernameByNo(value?.UserNoValue))
                                                }
                                            }
                                        </div>
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                }
            </table>
        </td>
    </tr>
    @if (attachments != null && attachments.Length > 0)
    {
        <tr>
            <td style="text-align: left;">
                <h4>Attachments:</h4>
            </td>
        </tr>
        for (int i = 0; i < attachments.Length; i++)
        {
            var item = attachments[i];
            <tr>
                <td style="text-align: left;">
                    @{
                        var contenttype = HtmlUIHelper.GetContentType(item.FileName);
                        if (contenttype != null)
                        {
                            <h5>
                                <a href="@Url.Action("ViewAttachment", new { attachementId = item.AttachementId })" target="_blank">
                                    @(i + 1). @item.OriFileName
                                </a>
                                <a href="@Url.Action("ViewAttachment", new { attachementId=item.AttachementId,download = true })" target="_blank">
                                    @StringResource.DOWNLOAD
                                </a>
                            </h5>
                            if (contenttype.StartsWith("image"))
                            {
                                <img src="@Url.Action("GetImageFile", new {attachmentId = item.AttachementId})" style="max-height: 180px; max-width: 180px;" />
                                @*<img src="@Url.Content("~/temp/app/" + item.FileName)" style="max-height: 180px; max-width: 180px;" />*@
                            }
                        }
                        else
                        {
                            <h5>
                                @(i + 1). @item.OriFileName
                                <a href="@Url.Action("ViewAttachment", new {attachementId = item.AttachementId, download = true})" target="_blank">
                                    @StringResource.DOWNLOAD
                                </a>
                            </h5>
                        }
                    }
                </td>
            </tr>
        }
    }
    @{
        CaseNotification[] comments = ViewBag.Comments as CaseNotification[];
        if (comments != null && comments.Length > 0)
        {
            <tr>
                <td style="text-align: left;">
                    <h4>Comments:</h4>
                </td>
            </tr>
            foreach (var msg in comments)
            {
                <tr>
                    <td style="text-align: left;">
                        <h4><span class="userno">@(WebCacheHelper.GetWF_UsernameByNo(msg.Sender))</span> Commented on @msg.Created </h4>
                        <h5 style="margin-left: 20px; max-width: 600px;">@msg.Comments</h5>
                    </td>
                </tr>
            }
        }
    }
</table>
